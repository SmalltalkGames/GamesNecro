Object subclass: #Quaternion	instanceVariableNames: 'x y z t'	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-3D'!!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 05:22'!multiplyQ1Q2Y: aBlock	"aBlock is a Q asOrderedCollection"	|  |		aBlock do: [ :argOneX :argTwoY :argThreeZ :argFourT | (t * argTwoY) 																		+ (x * argThreeZ) negated 																			+ (y * argFourT)																		+ (z * argOneX) ].! !!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 04:53'!y	^y	! !!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 04:53'!z	^z	! !!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 04:52'!x	^x	! !!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 05:15'!multiplyQ1Q2T: aBlock	"aBlock is a Q asOrderedCollection"	|  |		aBlock do: [ :argOneX :argTwoY :argThreeZ :argFourT | (x * argOneX) negated 																		+ (y * argTwoY) negated 																			+ (z * argThreeZ) negated																		+ (t * argFourT) ].	! !!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 04:47'!initializeX: cx Y: cy Z: cz T: tt	""	|  |		x := cx.	y := cy.	z := cz.	t := tt.	! !!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 05:26'!multiply: q2	"multiplication of quaternions"	|  |		self multiplyQ1Q2T: q2 asOrderedCollection.	self multiplyQ1Q2X: q2 asOrderedCollection.	self multiplyQ1Q2Y: q2 asOrderedCollection.	self multiplyQ1Q2Z: q2 asOrderedCollection.				^ self	! !!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 06:33'!asRotationMatrix: matrix	"4x4 matrix to rotate, first calculate the unit quaternion with q1 multiply: q2"		||		matrix at: 1 at: 1 put: (1-2*y*y-2*z*z).	matrix at: 1 at: 2 put: (2*x*y-2*t*z).	matrix at: 1 at: 3 put: (2*x*z+2*t*y).	matrix at: 1 at: 4 put: 0.		matrix at: 2 at: 1 put: (2*x*y+2*t*z).	matrix at: 2 at: 2 put: (1-2*x*x-2*z*z).	matrix at: 2 at: 3 put: (2*y*z+2*t*x).	matrix at: 2 at: 4 put: 0.	matrix at: 3 at: 1 put: (2*x*z-2*t*y).	matrix at: 3 at: 2 put: (2*y*z-2*t*x).	matrix at: 3 at: 3 put: (1-2*x*x-2*y*y).	matrix at: 3 at: 4 put: 0.		matrix at: 4 at: 1 put: 1.	matrix at: 4 at: 2 put: 1.	matrix at: 4 at: 3 put: 1.	matrix at: 4 at: 4 put: 1.! !!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 05:20'!multiplyQ1Q2X: aBlock	"aBlock is a Q asOrderedCollection"	|  |		aBlock do: [ :argOneX :argTwoY :argThreeZ :argFourT | (t * argOneX) 																		+ (x * argFourT) 																			+ (y * argThreeZ)																		+ (z * argTwoY) negated ].! !!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 04:53'!t	^t	! !!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 05:38'!initializeX: xx Y: yy Z: zz angle: a	"sets up a local rotation quaternion"	|  |		t := (a/2) cos.	x := xx * a/2 sin.	y := yy * a/2 sin.	z := zz * a/2 sin.		^ self	! !!Quaternion methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 05:24'!multiplyQ1Q2Z: aBlock	"aBlock is a Q asOrderedCollection"	|  |		aBlock do: [ :argOneX :argTwoY :argThreeZ :argFourT | (t * argThreeZ) 																		+ (x * argTwoY) 																			+ (y * argOneX) negated																		+ (z * argFourT) ].! !Matrix subclass: #RotationMatrix	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-3D'!Object subclass: #Functor	instanceVariableNames: 'x y z'	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!Functor methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 04:32'!y ^y! !!Functor methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 04:32'!z ^z! !!Functor methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 08:31'!apply: aBlock! !!Functor methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 04:32'!x ^x! !Functor subclass: #LorentzTransform	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!LorentzTransform methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 08:32'!apply: aBlock! !!LorentzTransform methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 08:24'!new	""		||	x := 1.	y := 1.	z := 1.		^self! !!LorentzTransform methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 08:23'!initializeWarpX: xx Y: yy Z: zz	""		||	x := xx.	y := yy.	z := zz.		^self! !Object subclass: #MoverInterface	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!MoverInterface methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:42'!update	""	|  |		^self! !OrderedCollection subclass: #MoverList	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!Object subclass: #PhysicsEngine	instanceVariableNames: 'moverlist'	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!PhysicsEngine methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:19'!detachMover: mover	""	moverlist remove: mover.! !!PhysicsEngine methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 06:55'!movement: mover	"moves following velocity - mover is a rectangular dimension"	mover updateVelocity.	^mover! !!PhysicsEngine methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:19'!attachMover: mover	""	moverlist add: mover.! !!PhysicsEngine methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:18'!initialize	""	moverlist := MoverList new.	^self! !!PhysicsEngine methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:27'!movement	""	moverlist do: [ :o | o update ].! !Functor subclass: #RotationTransform	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!RotationTransform methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 06:17'!apply: aBlock! !Object subclass: #SpaceTime	instanceVariableNames: 'x y width height'	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!SpaceTime methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:00'!setX: xx	" these are cached values for the ai engine "	|  |		x := xx.		^ self! !!SpaceTime methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:00'!setY: yy	" these are cached values for the ai engine "	|  |		y := yy.		^ self! !!SpaceTime methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:00'!setX: xx y: yy width:ww height: hh	" these are cached values for the ai engine "	|  |		x := xx.	y := yy.	width := ww.	height := hh.		^ self! !!SpaceTime methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:00'!initialize	" init coordinates and standstill for this base "	|  |		velocity := Velocity new.		^ self! !!SpaceTime methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:00'!y	" init coordinates and standstill for this base "	|  |	^ y! !!SpaceTime methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:00'!x	" init coordinates and standstill for this base "	|  |	^ x! !!SpaceTime methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 07:23'!transform: aBlock	""	|  |		aBlock block: [ :o | o warp ].	! !!SpaceTime methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:01'!width	" init coordinates and standstill for this base "	|  |	^ width! !!SpaceTime methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:00'!initializeX: xx y: yy width:ww height: hh	" these are cached values for the ai engine "	|  |		x = xx.	y = yy.	width = ww.	height = hh.		^ self! !!SpaceTime methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 08:38'!transform: functor with: transformer on: aBlock	""	|  |		^ transformer apply: functor on aBlock.	! !!SpaceTime methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:01'!height	" init coordinates and standstill for this base "	|  |	^ height! !SpaceTime subclass: #Mover	instanceVariableNames: 'velocity'	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!Mover methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:41'!initializedv: dvx dy: dvy	""	| |		velocity := Velocity newVX: dvx VY: dvy.	^self! !Mover subclass: #MovingDimension	instanceVariableNames: 'localtime'	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!MovingDimension methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:56'!updateOnVX: dv VY: dy	"real updates with constant velocity"	||			x := x + dv * localtime.	y := y + dy * localtime.	! !!MovingDimension methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:47'!initializedv: dvx dvy: dvy	""	||		super new initializedv: dvx dy: dvy.	^self! !!MovingDimension methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:51'!update	"real updates with constant velocity"	||		velocity update: self.! !Object subclass: #TransformFactory	instanceVariableNames: 'functors'	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!TransformFactory methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 04:14'!initialize	""		||		functors := OrderedCollection new.		functors add: LorentzTransform new.	functors add: TranslationTransform new.		functors add: RotationTransform new.		^self! !!TransformFactory methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 08:17'!getFunctor	^self! !!TransformFactory methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 08:46'!getFunctor: name	""	||		functors do: [ : f | (f class = name) ifTrue:[ ^ f ] ].	^nil	! !Object subclass: #Transformer	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!Transformer methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 08:31'!apply: functor on: aBlock	""	||		^ functor apply: aBlock.! !Functor subclass: #TranslationTransform	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!TranslationTransform methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 06:18'!apply: aBlock! !!TranslationTransform methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/8/2017 04:22'!new	""	| |		x := 0.	y := 0.	z := 0.! !Object subclass: #Velocity	instanceVariableNames: 'vx vy'	classVariableNames: ''	poolDictionaries: ''	category: 'Games-Necro-Physics'!!Velocity methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 06:57'!newVX:vvx VY:vvy	""	| |	vx := vvx.	vy := vvy.! !!Velocity methodsFor: 'as yet unclassified' stamp: 'JohanCeuppens 4/4/2017 07:51'!update: mover	""	| |	mover updateOnVX: vx VY: vy.! !